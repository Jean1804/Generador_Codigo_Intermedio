/* Generated By:JavaCC: Do not edit this line. ControlConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ControlConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO = 5;
  /** RegularExpression Id. */
  int NUMERO = 6;
  /** RegularExpression Id. */
  int PUNTOYCOMA = 7;
  /** RegularExpression Id. */
  int ASIG = 8;
  /** RegularExpression Id. */
  int DOSPUNTOS = 9;
  /** RegularExpression Id. */
  int MAS = 10;
  /** RegularExpression Id. */
  int POR = 11;
  /** RegularExpression Id. */
  int ENTRE = 12;
  /** RegularExpression Id. */
  int MENOS = 13;
  /** RegularExpression Id. */
  int LPAREN = 14;
  /** RegularExpression Id. */
  int RPAREN = 15;
  /** RegularExpression Id. */
  int LLLAVE = 16;
  /** RegularExpression Id. */
  int RLLAVE = 17;
  /** RegularExpression Id. */
  int LCOR = 18;
  /** RegularExpression Id. */
  int RCOR = 19;
  /** RegularExpression Id. */
  int MAYOR = 20;
  /** RegularExpression Id. */
  int MENOR = 21;
  /** RegularExpression Id. */
  int IGUAL = 22;
  /** RegularExpression Id. */
  int MAI = 23;
  /** RegularExpression Id. */
  int MEI = 24;
  /** RegularExpression Id. */
  int DIF = 25;
  /** RegularExpression Id. */
  int AND = 26;
  /** RegularExpression Id. */
  int OR = 27;
  /** RegularExpression Id. */
  int NOT = 28;
  /** RegularExpression Id. */
  int IF = 29;
  /** RegularExpression Id. */
  int WHILE = 30;
  /** RegularExpression Id. */
  int REPEAT = 31;
  /** RegularExpression Id. */
  int CASO = 32;
  /** RegularExpression Id. */
  int THEN = 33;
  /** RegularExpression Id. */
  int ELSE = 34;
  /** RegularExpression Id. */
  int FIN = 35;
  /** RegularExpression Id. */
  int DO = 36;
  /** RegularExpression Id. */
  int UNTIL = 37;
  /** RegularExpression Id. */
  int CASE = 38;
  /** RegularExpression Id. */
  int OF = 39;
  /** RegularExpression Id. */
  int OTHERWISE = 40;
  /** RegularExpression Id. */
  int ID = 41;
  /** RegularExpression Id. */
  int ILEGAL = 42;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int INICIO_LINEA = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"b\\u00af&\"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<COMENTARIO>",
    "<NUMERO>",
    "\";\"",
    "\":=\"",
    "\":\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"-\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\">\"",
    "\"<\"",
    "\"=\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"AND\"",
    "\"OR\"",
    "\"NOT\"",
    "\"IF\"",
    "\"WHILE\"",
    "\"REPEAT\"",
    "\"CASO\"",
    "\"THEN\"",
    "\"ELSE\"",
    "\"FIN\"",
    "\"DO\"",
    "\"UNTIL\"",
    "\"CASE\"",
    "\"OF\"",
    "\"OTHERWISE\"",
    "<ID>",
    "<ILEGAL>",
  };

}
